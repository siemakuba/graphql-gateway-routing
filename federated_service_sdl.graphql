type AccountEmbeddedDashboards {
  embeddedDashboards: [EmbeddedDashboardForAccount!]!
  uuid: String!
}

type Analytics {
  canAccessRoute: AuthorizationResult!
  canViewAccountList: AuthorizationResult!
  canViewSettings: AuthorizationResult!
}

type AuthorizationResult {
  """
  Human-readable error message
  """
  message: String

  """
  Reasons of check failure
  """
  reasons: FailureReasons

  """
  Result of applying a policy rule
  """
  value: Boolean!
}

"""
An ISO 8601-encoded datetime
"""
scalar DateTime

type EmbeddedDashboard {
  createdAt: DateTime!
  createdBy: String!
  dashboard: Int!
  deletedAt: DateTime
  deletedBy: String
  id: String!
  name: String!
  permissions: [Permission!]!
  provider: EmbeddedDashboardProvider!
  updatedAt: DateTime!
  updatedBy: String!
  visibleFilters: [String!]!
}

type EmbeddedDashboardForAccount {
  id: String!
  name: String!
  url: String!
}

enum EmbeddedDashboardProvider {
  LOOKER
  PERISCOPE
}

"""
Autogenerated input type of EmbeddedDashboardsCreate
"""
input EmbeddedDashboardsCreateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  dashboard: Int!
  id: String!
  name: String!
  permissions: [PermissionInput!]!
  provider: EmbeddedDashboardProvider = PERISCOPE
  visibleFilters: [String!] = []
}

"""
Autogenerated return type of EmbeddedDashboardsCreate
"""
type EmbeddedDashboardsCreatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  embeddedDashboard: EmbeddedDashboard
  errors: [InputError!]
}

"""
Autogenerated input type of EmbeddedDashboardsDelete
"""
input EmbeddedDashboardsDeleteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: String!
}

"""
Autogenerated return type of EmbeddedDashboardsDelete
"""
type EmbeddedDashboardsDeletePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  embeddedDashboard: EmbeddedDashboard
  errors: [InputError!]
}

"""
Autogenerated input type of EmbeddedDashboardsUpdate
"""
input EmbeddedDashboardsUpdateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  dashboard: Int
  id: String!
  name: String
  permissions: [PermissionInput!]
  visibleFilters: [String!]
}

"""
Autogenerated return type of EmbeddedDashboardsUpdate
"""
type EmbeddedDashboardsUpdatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  embeddedDashboard: EmbeddedDashboard
  errors: [InputError!]
}

type FailureReasons {
  """
  JSON-encoded map of reasons
  """
  details: String!

  """
  Human-readable errors
  """
  fullMessages: [String!]!
}

type GlobalPermissions @extends @key(fields: "currentUserId") {
  analytics: Analytics
  currentUserId: String! @external
}

type InputError {
  message: String!
  path: String!
}

type Mutation @extends {
  embeddedDashboardsCreate(
    """
    Parameters for EmbeddedDashboardsCreate
    """
    input: EmbeddedDashboardsCreateInput!
  ): EmbeddedDashboardsCreatePayload
  embeddedDashboardsDelete(
    """
    Parameters for EmbeddedDashboardsDelete
    """
    input: EmbeddedDashboardsDeleteInput!
  ): EmbeddedDashboardsDeletePayload
  embeddedDashboardsUpdate(
    """
    Parameters for EmbeddedDashboardsUpdate
    """
    input: EmbeddedDashboardsUpdateInput!
  ): EmbeddedDashboardsUpdatePayload
}

type Permission {
  accountUuid: String!
  permittedRoles: [PermittedRole!]!
}

input PermissionInput {
  accountUuid: String!
  permittedRoles: [PermittedRole!]!
}

enum PermittedRole {
  ADMIN
  AGENT
  CUSTOMER
  MANUFACTURER
}

type Query {
  accountsEmbeddedDashboards(uuids: [String!]!): [AccountEmbeddedDashboards!]!
  analytics: Analytics
  embeddedDashboards: [EmbeddedDashboard!]!
}